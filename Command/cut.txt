[[Linuxのシェルまとめ]]

#setlinebreak(on)


* cut [#o47a75d0]


''構文''

COLOR(blue):''cut [-bcf位置] [-d 区切り文字] ファイル''
COLOR(blue):　※区切り文字のデフォルトは、TABである。

#br

''オプション''

①-b位置
バイト単位で切り出します。バイト位置を下記のように指定します。
　　-b5　　:　5バイト目
　　-b1,3　:　1バイト目と3バイト目
　　-b2-5　:　2～5バイト目
　　-b-3　:　先頭から3バイト
　　-b5-　:　5バイト目以降

②-c位置
文字数単位で切り出します。文字位置を下記のように指定します。
　　-c5　　:　5文字目
　　-c1,3　:　1文字目と3文字目
　　-c2-5　:　2～5文字目
　　-c-3　:　先頭から3文字
　　-c5-　:　5文字目以降

③-f位置
フィールド単位で切り出します。フィールド位置を下記のように指定します。
　　-f5　　:　5番目のフィールド
　　-f1,3　:　1番目と3番目のフィールド
　　-f2-5　:　2～5番目のフィールド
　　-f-3　:　先頭(1番目)から3番目のフィールド
　　-f5-　:　5番目以降のフィールド


④[-d 区切り文字]
フィールドの区切り文字を指定します。デフォルトのフィールド区切り文字は「TAB」です。

　

**使用例 [#vcf14b36]

''$ cut -c-10 file''
　　「file」の先頭から10文字切り出して表示します。

''$ cut -f2,4 file''
　　「file」の2番目と4番目のフィールドを表示します。

''$echo helloworld | cut -c5- ''
　　「helloworld」の5番目以降の文字を切り出して表示する。

''$cat hoge.txt | cut -d , -f 3''
　　「hoge.txtの中身は1,2,3,4,5」→出力されるのは　3　のみ


**重要 [#id645718]

COLOR(red):cut -d は -fでないと使えない。


''[OK]　$cat hoge.txt | cut -d , -f 3''

''[NG]　$cat hoge.txt | cut -d , -c 3''
　　→エラーになる。
